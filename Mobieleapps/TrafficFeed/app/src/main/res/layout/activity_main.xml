<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- merk op: hier heb je "viewmodel" nergens nodig, dus moet het ook niet als
    variabele gedeclareerd te worden; enkel in fragment_detail.xml heb je het nodig.
    <data>
        <variable name="viewmodel" type="com.example.trafficfeed.ui.MyViewModel"/>
    </data>
    -->

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        tools:context=".view.ui.MainActivity">

        <FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <!-- een fragment met android:name gelijk aan "androidx.navigation.fragment.NavHostFragment"
                 zal ervoor zorgen dat er navigatie IS, dat wil zeggen dat het bestaan van dit fragment
                 ervoor zorgt dat de code "Navigation.findNavController(view)..." (in MainFragment.kt)
                 Ã¼berhaupt een NavController zal opleveren.
                 Moest er geen dergelijk fragment staan, dan zal er geen NavController gevonden worden.
                 Daarom ook dat er (voor aanroep van de code NavController)
                 eerst getest zal worden of dit specifieke fragment
                 (met id 'navhostfragment') wel degelijk bestaat. -->

            <fragment
                android:id="@+id/navhostfragment"
                android:name="androidx.navigation.fragment.NavHostFragment"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:defaultNavHost="true"
                app:navGraph="@navigation/nav_graph" />
        </FrameLayout>
    </LinearLayout>
</layout>
